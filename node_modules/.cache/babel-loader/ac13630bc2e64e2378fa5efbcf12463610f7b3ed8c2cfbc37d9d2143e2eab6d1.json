{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUBOMMAS\\\\Downloads\\\\WeatherApplication\\\\src\\\\components\\\\NavBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { cities, fetchAPI, formatResponse } from \"../constants\";\nimport styles from \"./NavBar.module.css\";\n//import CustomBar from \"./CutomBar\";\nimport { CityContext } from \"../store/WeatherProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet start = [];\nfor (let i = 0; i < 10; i++) {\n  //console.log(\"PUSHED\", cities[i])\n  start.push(cities[i]);\n}\nfunction NavBar() {\n  _s();\n  const [customCities, setCutomCities] = useState([...start]);\n  const prevRef = useRef(null);\n  const context = useContext(CityContext);\n  const [active, setActive] = useState(0);\n  const [size, setSize] = useState(cities.length);\n  const [isDisabled, setIsDisabled] = useState(true);\n  function getCurrentCity() {\n    navigator.geolocation.getCurrentPosition(position => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      fetch(\"https://api.weatherapi.com/v1/current.json?key=dc27acb7394c462a8a6133905240105&q=\".concat(latitude, \",\").concat(longitude)) // Replace with your OpenWeatherMap API key\n      .then(response => response.json()).then(data => {\n        //console.log(\"Current nearby city:\", data.location.name);\n        context.updateLocation(data.location.name);\n      }).catch(error => console.error(\"Error fetching city:\", error));\n    }, error => {\n      console.error(\"Error getting geolocation:\", error);\n    });\n  }\n  const fetchCityWeather = async () => {\n    getCurrentCity();\n    //console.log(context.currentLocation)\n  };\n\n  //console.log(customCities)\n  const nextHandler = async () => {\n    context.updateReq(false);\n    //console.log(\"CURRENT CITIES:: \",customCities);\n    console.log(\"ACTIVE::\", active);\n    if (active <= 9) {\n      setActive(prevState => prevState + 1);\n      setSize(prevSize => prevSize - 1);\n    }\n    const fetchcity = customCities[active + 1];\n    const result = await fetchAPI(fetchcity);\n    const city = await formatResponse(result);\n    console.log(\"formatted\", city);\n    context.updateCity(city);\n    context.updateReq(true);\n    if (active === 9 && size > 1) {\n      setActive(9);\n      const firstElement = cities.findIndex(name => name === customCities[0]);\n      const lastElement = cities.findIndex(name => name === customCities[customCities.length - 1]);\n      //console.log(\"INDEX:: \",firstElement+1, lastElement+2);\n      //let range = Math.floor(Math.random()*2);\n      let newList = cities.slice(firstElement + 1, lastElement + 2);\n      setCutomCities(newList);\n    }\n    //onClickHandler(active)\n  };\n  const prevHandler = async () => {\n    context.updateReq(false);\n    console.log(\"ACTIVE::\", active);\n    //console.log(\"CURRENT CITIES:: \",customCities);\n    //setActive((prevState)=>prevState-1);\n    if (active > 0) {\n      setActive(prevState => prevState - 1);\n    }\n    setSize(prevSize => prevSize + 1);\n    const fetchcity = customCities[active - 1];\n    const result = await fetchAPI(fetchcity);\n    const city = await formatResponse(result);\n    console.log(\"formatted\", city);\n    context.updateCity(city);\n    context.updateReq(true);\n    if (active === 0 && size <= 28) {\n      setActive(0);\n      const firstElement = cities.findIndex(name => name === customCities[0]);\n      const lastElement = cities.findIndex(name => name === customCities[customCities.length - 1]);\n      // console.log(\"INDEX:: \",firstElement+1, lastElement+2);\n      //let range = Math.floor(Math.random()*2);\n      let newList = cities.slice(firstElement - 1, lastElement);\n      // console.log(\"UPDATED::\",newList)\n      setCutomCities(newList);\n    }\n  };\n  const onClickHandler = async index => {\n    setActive(index);\n    const fetchcity = customCities[index];\n    const result = await fetchAPI(fetchcity);\n    const city = await formatResponse(result);\n    //console.log(\"formatted\",city)\n    context.updateCity(city);\n    context.updateReq(true);\n  };\n  useEffect(() => {\n    setIsDisabled(active === 0);\n  }, [active]);\n  useEffect(() => {\n    //getCurrentCity();\n    //fetchCityWeather();\n    //console.log(customCities[active])\n    onClickHandler(active);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"city-container\"],\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: prevHandler,\n      ref: prevRef,\n      disabled: size === 29 && active == 0,\n      children: \"<<\"\n    }, \"prev\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), customCities && customCities.map((name, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickHandler(index),\n      className: index === active ? styles[\"city-button-active\"] : styles[\"city-button\"],\n      name: name,\n      children: name\n    }, \"city\".concat(index), false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"spread\",\n      children: \"...\"\n    }, \"spread\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: size\n    }, \"size\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextHandler,\n      disabled: size < 2 && active === 9,\n      children: \">>\"\n    }, \"next\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n_s(NavBar, \"AFOldBNmT88rOBNu2xgJ9SN/gaQ=\");\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","cities","fetchAPI","formatResponse","styles","CityContext","jsxDEV","_jsxDEV","start","i","push","NavBar","_s","customCities","setCutomCities","prevRef","context","active","setActive","size","setSize","length","isDisabled","setIsDisabled","getCurrentCity","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","fetch","concat","then","response","json","data","updateLocation","location","name","catch","error","console","fetchCityWeather","nextHandler","updateReq","log","prevState","prevSize","fetchcity","result","city","updateCity","firstElement","findIndex","lastElement","newList","slice","prevHandler","onClickHandler","index","className","children","onClick","ref","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/SUBOMMAS/Downloads/WeatherApplication/src/components/NavBar.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport { cities, fetchAPI, formatResponse } from \"../constants\";\r\nimport styles from \"./NavBar.module.css\";\r\n//import CustomBar from \"./CutomBar\";\r\nimport { CityContext } from \"../store/WeatherProvider\";\r\n\r\nlet start = [];\r\nfor (let i = 0; i < 10; i++) {\r\n    //console.log(\"PUSHED\", cities[i])\r\n    start.push(cities[i]);\r\n}\r\n\r\nfunction NavBar() {\r\n    const [customCities, setCutomCities] = useState([...start]);\r\n    const prevRef = useRef(null);\r\n    const context = useContext(CityContext);\r\n    const [active, setActive] = useState(0);\r\n    const[size, setSize] = useState(cities.length);\r\n    const [isDisabled, setIsDisabled] = useState(true)\r\n\r\n    function getCurrentCity() {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const latitude = position.coords.latitude;\r\n            const longitude = position.coords.longitude;\r\n            fetch(`https://api.weatherapi.com/v1/current.json?key=dc27acb7394c462a8a6133905240105&q=${latitude},${longitude}`) // Replace with your OpenWeatherMap API key\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    //console.log(\"Current nearby city:\", data.location.name);\r\n                    context.updateLocation(data.location.name);\r\n                })\r\n                .catch(error => console.error(\"Error fetching city:\", error));\r\n        }, (error) => {\r\n            console.error(\"Error getting geolocation:\", error);\r\n        })\r\n    }\r\n\r\n    const fetchCityWeather = async () => {\r\n        getCurrentCity()\r\n        //console.log(context.currentLocation)\r\n    } \r\n\r\n    //console.log(customCities)\r\n    const nextHandler = async() => {\r\n        context. updateReq(false);\r\n        //console.log(\"CURRENT CITIES:: \",customCities);\r\n        console.log(\"ACTIVE::\", active)\r\n        if(active <=9){\r\n            setActive((prevState)=>prevState+1);\r\n            setSize((prevSize)=>prevSize-1);\r\n        }\r\n        const fetchcity = customCities[active+1];\r\n        const result = await fetchAPI(fetchcity);\r\n        const city=await formatResponse(result);\r\n        console.log(\"formatted\",city)\r\n        context.updateCity(city);\r\n        context. updateReq(true);\r\n        if (active === 9 && size>1) {\r\n            setActive(9);\r\n\r\n            const firstElement = cities.findIndex((name) => name === customCities[0]);\r\n            const lastElement = cities.findIndex((name) => name === customCities[customCities.length - 1]);\r\n            //console.log(\"INDEX:: \",firstElement+1, lastElement+2);\r\n            //let range = Math.floor(Math.random()*2);\r\n            let newList = cities.slice(firstElement + 1, lastElement + 2)\r\n            setCutomCities(newList);\r\n        }\r\n        //onClickHandler(active)\r\n\r\n    }\r\n    const prevHandler = async() => {\r\n        context. updateReq(false);\r\n        console.log(\"ACTIVE::\", active)\r\n       //console.log(\"CURRENT CITIES:: \",customCities);\r\n        //setActive((prevState)=>prevState-1);\r\n        if(active >0){\r\n            setActive((prevState)=>prevState-1);\r\n        }\r\n        setSize((prevSize)=>prevSize+1);\r\n        const fetchcity = customCities[active-1];\r\n        const result = await fetchAPI(fetchcity);\r\n        const city=await formatResponse(result);\r\n        console.log(\"formatted\",city)\r\n        context.updateCity(city);\r\n        context. updateReq(true);\r\n        \r\n        if (active ===0 && size<=28) {\r\n            setActive(0);\r\n            const firstElement = cities.findIndex((name) => name === customCities[0]);\r\n            const lastElement = cities.findIndex((name) => name === customCities[customCities.length - 1]);\r\n           // console.log(\"INDEX:: \",firstElement+1, lastElement+2);\r\n            //let range = Math.floor(Math.random()*2);\r\n            let newList = cities.slice(firstElement-1, lastElement)\r\n           // console.log(\"UPDATED::\",newList)\r\n            setCutomCities(newList);\r\n            \r\n        }\r\n    }\r\n    const onClickHandler = async (index) => {\r\n        setActive(index);\r\n        const fetchcity = customCities[index];\r\n        const result = await fetchAPI(fetchcity);\r\n        const city=await formatResponse(result);\r\n        //console.log(\"formatted\",city)\r\n        context.updateCity(city);\r\n        context. updateReq(true);\r\n    }\r\n    useEffect(()=>{\r\n       setIsDisabled(active===0);\r\n    },[active]);\r\n\r\n    useEffect(() => {\r\n        //getCurrentCity();\r\n        //fetchCityWeather();\r\n        //console.log(customCities[active])\r\n        onClickHandler(active);\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles[\"city-container\"]}>\r\n            <button key={\"prev\"}  onClick={prevHandler} ref={prevRef} disabled={size===29 && active==0}>{\"<<\"}</button>\r\n            {customCities && customCities.map((name, index) => (\r\n\r\n                <button key={`city${index}`} onClick={()=>onClickHandler(index)} className={index === active?styles[\"city-button-active\"]:styles[\"city-button\"]} name={name}>{name}</button>\r\n            ))}\r\n            <button name=\"spread\" key=\"spread\">...</button>\r\n            <button key=\"size\">{size}</button>\r\n            <button onClick={nextHandler} key=\"next\" disabled={size<2 && active===9}>{\">>\"}</button>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default NavBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,QAAQ,OAAO;AACtE,SAASC,MAAM,EAAEC,QAAQ,EAAEC,cAAc,QAAQ,cAAc;AAC/D,OAAOC,MAAM,MAAM,qBAAqB;AACxC;AACA,SAASC,WAAW,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,IAAIC,KAAK,GAAG,EAAE;AACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;EACzB;EACAD,KAAK,CAACE,IAAI,CAACT,MAAM,CAACQ,CAAC,CAAC,CAAC;AACzB;AAEA,SAASE,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,YAAY,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,CAAC,GAAGW,KAAK,CAAC,CAAC;EAC3D,MAAMO,OAAO,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAMiB,OAAO,GAAGhB,UAAU,CAACK,WAAW,CAAC;EACvC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAK,CAACsB,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAACI,MAAM,CAACoB,MAAM,CAAC;EAC9C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAElD,SAAS2B,cAAcA,CAAA,EAAG;IACtBC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,QAAQ,IAAK;MACnD,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAM,CAACD,QAAQ;MACzC,MAAME,SAAS,GAAGH,QAAQ,CAACE,MAAM,CAACC,SAAS;MAC3CC,KAAK,qFAAAC,MAAA,CAAqFJ,QAAQ,OAAAI,MAAA,CAAIF,SAAS,CAAE,CAAC,CAAC;MAAA,CAC9GG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACV;QACArB,OAAO,CAACsB,cAAc,CAACD,IAAI,CAACE,QAAQ,CAACC,IAAI,CAAC;MAC9C,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;IACrE,CAAC,EAAGA,KAAK,IAAK;MACVC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN;EAEA,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjCpB,cAAc,CAAC,CAAC;IAChB;EACJ,CAAC;;EAED;EACA,MAAMqB,WAAW,GAAG,MAAAA,CAAA,KAAW;IAC3B7B,OAAO,CAAE8B,SAAS,CAAC,KAAK,CAAC;IACzB;IACAH,OAAO,CAACI,GAAG,CAAC,UAAU,EAAE9B,MAAM,CAAC;IAC/B,IAAGA,MAAM,IAAG,CAAC,EAAC;MACVC,SAAS,CAAE8B,SAAS,IAAGA,SAAS,GAAC,CAAC,CAAC;MACnC5B,OAAO,CAAE6B,QAAQ,IAAGA,QAAQ,GAAC,CAAC,CAAC;IACnC;IACA,MAAMC,SAAS,GAAGrC,YAAY,CAACI,MAAM,GAAC,CAAC,CAAC;IACxC,MAAMkC,MAAM,GAAG,MAAMjD,QAAQ,CAACgD,SAAS,CAAC;IACxC,MAAME,IAAI,GAAC,MAAMjD,cAAc,CAACgD,MAAM,CAAC;IACvCR,OAAO,CAACI,GAAG,CAAC,WAAW,EAACK,IAAI,CAAC;IAC7BpC,OAAO,CAACqC,UAAU,CAACD,IAAI,CAAC;IACxBpC,OAAO,CAAE8B,SAAS,CAAC,IAAI,CAAC;IACxB,IAAI7B,MAAM,KAAK,CAAC,IAAIE,IAAI,GAAC,CAAC,EAAE;MACxBD,SAAS,CAAC,CAAC,CAAC;MAEZ,MAAMoC,YAAY,GAAGrD,MAAM,CAACsD,SAAS,CAAEf,IAAI,IAAKA,IAAI,KAAK3B,YAAY,CAAC,CAAC,CAAC,CAAC;MACzE,MAAM2C,WAAW,GAAGvD,MAAM,CAACsD,SAAS,CAAEf,IAAI,IAAKA,IAAI,KAAK3B,YAAY,CAACA,YAAY,CAACQ,MAAM,GAAG,CAAC,CAAC,CAAC;MAC9F;MACA;MACA,IAAIoC,OAAO,GAAGxD,MAAM,CAACyD,KAAK,CAACJ,YAAY,GAAG,CAAC,EAAEE,WAAW,GAAG,CAAC,CAAC;MAC7D1C,cAAc,CAAC2C,OAAO,CAAC;IAC3B;IACA;EAEJ,CAAC;EACD,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAW;IAC3B3C,OAAO,CAAE8B,SAAS,CAAC,KAAK,CAAC;IACzBH,OAAO,CAACI,GAAG,CAAC,UAAU,EAAE9B,MAAM,CAAC;IAChC;IACC;IACA,IAAGA,MAAM,GAAE,CAAC,EAAC;MACTC,SAAS,CAAE8B,SAAS,IAAGA,SAAS,GAAC,CAAC,CAAC;IACvC;IACA5B,OAAO,CAAE6B,QAAQ,IAAGA,QAAQ,GAAC,CAAC,CAAC;IAC/B,MAAMC,SAAS,GAAGrC,YAAY,CAACI,MAAM,GAAC,CAAC,CAAC;IACxC,MAAMkC,MAAM,GAAG,MAAMjD,QAAQ,CAACgD,SAAS,CAAC;IACxC,MAAME,IAAI,GAAC,MAAMjD,cAAc,CAACgD,MAAM,CAAC;IACvCR,OAAO,CAACI,GAAG,CAAC,WAAW,EAACK,IAAI,CAAC;IAC7BpC,OAAO,CAACqC,UAAU,CAACD,IAAI,CAAC;IACxBpC,OAAO,CAAE8B,SAAS,CAAC,IAAI,CAAC;IAExB,IAAI7B,MAAM,KAAI,CAAC,IAAIE,IAAI,IAAE,EAAE,EAAE;MACzBD,SAAS,CAAC,CAAC,CAAC;MACZ,MAAMoC,YAAY,GAAGrD,MAAM,CAACsD,SAAS,CAAEf,IAAI,IAAKA,IAAI,KAAK3B,YAAY,CAAC,CAAC,CAAC,CAAC;MACzE,MAAM2C,WAAW,GAAGvD,MAAM,CAACsD,SAAS,CAAEf,IAAI,IAAKA,IAAI,KAAK3B,YAAY,CAACA,YAAY,CAACQ,MAAM,GAAG,CAAC,CAAC,CAAC;MAC/F;MACC;MACA,IAAIoC,OAAO,GAAGxD,MAAM,CAACyD,KAAK,CAACJ,YAAY,GAAC,CAAC,EAAEE,WAAW,CAAC;MACxD;MACC1C,cAAc,CAAC2C,OAAO,CAAC;IAE3B;EACJ,CAAC;EACD,MAAMG,cAAc,GAAG,MAAOC,KAAK,IAAK;IACpC3C,SAAS,CAAC2C,KAAK,CAAC;IAChB,MAAMX,SAAS,GAAGrC,YAAY,CAACgD,KAAK,CAAC;IACrC,MAAMV,MAAM,GAAG,MAAMjD,QAAQ,CAACgD,SAAS,CAAC;IACxC,MAAME,IAAI,GAAC,MAAMjD,cAAc,CAACgD,MAAM,CAAC;IACvC;IACAnC,OAAO,CAACqC,UAAU,CAACD,IAAI,CAAC;IACxBpC,OAAO,CAAE8B,SAAS,CAAC,IAAI,CAAC;EAC5B,CAAC;EACDhD,SAAS,CAAC,MAAI;IACXyB,aAAa,CAACN,MAAM,KAAG,CAAC,CAAC;EAC5B,CAAC,EAAC,CAACA,MAAM,CAAC,CAAC;EAEXnB,SAAS,CAAC,MAAM;IACZ;IACA;IACA;IACA8D,cAAc,CAAC3C,MAAM,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA;IAAKuD,SAAS,EAAE1D,MAAM,CAAC,gBAAgB,CAAE;IAAA2D,QAAA,gBACrCxD,OAAA;MAAsByD,OAAO,EAAEL,WAAY;MAACM,GAAG,EAAElD,OAAQ;MAACmD,QAAQ,EAAE/C,IAAI,KAAG,EAAE,IAAIF,MAAM,IAAE,CAAE;MAAA8C,QAAA,EAAE;IAAI,GAApF,MAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuF,CAAC,EAC1GzD,YAAY,IAAIA,YAAY,CAAC0D,GAAG,CAAC,CAAC/B,IAAI,EAAEqB,KAAK,kBAE1CtD,OAAA;MAA6ByD,OAAO,EAAEA,CAAA,KAAIJ,cAAc,CAACC,KAAK,CAAE;MAACC,SAAS,EAAED,KAAK,KAAK5C,MAAM,GAACb,MAAM,CAAC,oBAAoB,CAAC,GAACA,MAAM,CAAC,aAAa,CAAE;MAACoC,IAAI,EAAEA,IAAK;MAAAuB,QAAA,EAAEvB;IAAI,UAAAP,MAAA,CAA9I4B,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkJ,CAC9K,CAAC,eACF/D,OAAA;MAAQiC,IAAI,EAAC,QAAQ;MAAAuB,QAAA,EAAc;IAAG,GAAZ,QAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC/C/D,OAAA;MAAAwD,QAAA,EAAoB5C;IAAI,GAAZ,MAAM;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,eAClC/D,OAAA;MAAQyD,OAAO,EAAEnB,WAAY;MAAYqB,QAAQ,EAAE/C,IAAI,GAAC,CAAC,IAAIF,MAAM,KAAG,CAAE;MAAA8C,QAAA,EAAE;IAAI,GAA5C,MAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvF,CAAC;AAGd;AAAC1D,EAAA,CAtHQD,MAAM;AAAA6D,EAAA,GAAN7D,MAAM;AAuHf,eAAeA,MAAM;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}