{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUBOMMAS\\\\Downloads\\\\WeatherApplication\\\\src\\\\components\\\\NavBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { cities } from \"../constants\";\nimport styles from \"./NavBar.module.css\";\nimport CustomBar from \"./CutomBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet start = [];\nfor (let i = 0; i < 10; i++) {\n  //console.log(\"PUSHED\", cities[i])\n  start.push(cities[i]);\n}\nfunction NavBar() {\n  _s();\n  const [customCities, setCutomCities] = useState([...start]);\n  const [range, setRange] = useState(1);\n  //console.log(\"CURRENT CITIES:: \",customCities[0]);\n  const size = cities.length;\n  //console.log(customCities)\n  const nextHandler = () => {\n    //console.log(\"CURRENT CITIES:: \",customCities);\n    const firstElement = cities.findIndex(name => name === customCities[0]);\n    const lastElement = cities.findIndex(name => name === customCities[customCities.length - 1]);\n    //console.log(\"INDEX:: \",firstElement+1, lastElement+2);\n    //let range = Math.floor(Math.random()*2);\n    console.log(range);\n    let newList = cities.slice(firstElement + 1, lastElement + range);\n    if (range === 1) {\n      setRange(3);\n    } else {\n      setRange(1);\n    }\n    setCutomCities(newList);\n  };\n  useEffect(() => {\n    console.log(\"Custom cities updated:\", customCities);\n  }, [customCities]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"city-container\"],\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"<<\"\n    }, \"prev\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(CustomBar, {\n      customCities: customCities,\n      cities: cities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"spread\",\n      children: \"...\"\n    }, \"spread\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: size\n    }, \"size\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextHandler,\n      children: \">>\"\n    }, \"next\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(NavBar, \"CtCWnAapoieiYisABB+STNLy+Fg=\");\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","useEffect","cities","styles","CustomBar","jsxDEV","_jsxDEV","start","i","push","NavBar","_s","customCities","setCutomCities","range","setRange","size","length","nextHandler","firstElement","findIndex","name","lastElement","console","log","newList","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SUBOMMAS/Downloads/WeatherApplication/src/components/NavBar.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {cities} from \"../constants\";\r\nimport styles from \"./NavBar.module.css\";\r\nimport CustomBar from \"./CutomBar\";\r\n\r\nlet start =[];\r\nfor(let i= 0;i<10;i++){\r\n    //console.log(\"PUSHED\", cities[i])\r\n   start.push(cities[i]);\r\n }\r\n\r\nfunction NavBar(){\r\n    const [customCities, setCutomCities] = useState([...start]);\r\n    const [range, setRange] = useState(1);\r\n    //console.log(\"CURRENT CITIES:: \",customCities[0]);\r\n    const size = cities.length;\r\n    //console.log(customCities)\r\n   const nextHandler =()=>{\r\n    //console.log(\"CURRENT CITIES:: \",customCities);\r\n    const firstElement =  cities.findIndex((name)=>name === customCities[0]);\r\n    const lastElement =  cities.findIndex((name)=>name === customCities[customCities.length-1]);\r\n    //console.log(\"INDEX:: \",firstElement+1, lastElement+2);\r\n    //let range = Math.floor(Math.random()*2);\r\n    console.log(range)\r\n    \r\n    let newList = cities.slice(firstElement+1, lastElement+range)\r\n    if(range ===1){\r\n        setRange(3);\r\n        \r\n    }\r\n    else{\r\n        setRange(1)   \r\n    }\r\n    setCutomCities(newList);\r\n     \r\n   }\r\n   useEffect(() => {\r\n    console.log(\"Custom cities updated:\", customCities);\r\n  }, [customCities]);\r\n\r\n    return (\r\n        <div className={styles[\"city-container\"]}>\r\n         <button key={\"prev\"}>{\"<<\"}</button>\r\n         <CustomBar customCities={customCities} cities={cities}/>\r\n          <button name=\"spread\" key=\"spread\">...</button>\r\n         <button key=\"size\">{size}</button> \r\n         <button onClick={nextHandler} key=\"next\">{\">>\"}</button>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default NavBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}