{"ast":null,"code":"import axios from \"axios\";\nexport const cities = [\"Itanagar\", \"Dispur\", \"Patna\", \"Raipur\", \"Panaji\", \"Gandhinagar\", \"Chandigarh\", \"Shimla\", \"Dharamshala\", \"Ranchi\", \"Bengaluru\", \"Thiruvananthapuram\", \"Tirupati\", \"Amaravati\", \"Bhopal\", \"Mumbai\", \"Imphal\", \"Shillong\", \"Aizawl\", \"Kohima\", \"Bhubaneswar\", \"Jaipur\", \"Gangtok\", \"Chennai\", \"Hyderabad\", \"Agartala\", \"Dehradun\", \"Gairsain\", \"Lucknow\"];\nexport const fetchAPI = async city => {\n  if (city.toLowerCase() === \"banglore\" || city.toLowerCase() === \"bengluru\") {\n    city = \"Bangalore\";\n  }\n  let URL = \"https://api.weatherapi.com/v1/current.json?key=dc27acb7394c462a8a6133905240105&q=\".concat(city);\n  console.log(\"CUSTOM URL::\", URL);\n  try {\n    const response = await axios(URL);\n    if (response.status === 200) {\n      // console.log(\"RESPONSE::\", response);\n\n      const data = await response.data;\n      //console.log(data);\n      return data;\n      //const { condition, humidity, last_updated, wind_kph, temp_c, temp_f } = current;\n    }\n  } catch (error) {\n    if (error.code === \"ERR_BAD_REQUEST\") {\n      return error.message;\n    }\n  }\n};\nexport const formatResponse = async result => {\n  if (typeof result === \"object\") {\n    console.log(\"succes\");\n    const {\n      current,\n      location\n    } = await result;\n    const {\n      condition,\n      humidity,\n      last_updated,\n      wind_kph,\n      temp_c,\n      temp_f\n    } = current;\n    const {\n      name,\n      country,\n      tz_id\n    } = location;\n    // console.log(tz_id);\n    const city = {\n      name: name,\n      country: country,\n      timezone: tz_id,\n      weather: {\n        temperature: {\n          celsius: temp_c,\n          fahrenheit: temp_f\n        },\n        weatherCondition: condition.text,\n        windSpeed: wind_kph,\n        humidity: humidity,\n        cloudCoverage: condition.icon,\n        lastUpdated: last_updated\n      }\n    };\n  } else {\n    console.log(\"error\");\n    context.updateCity(result);\n  }\n};","map":{"version":3,"names":["axios","cities","fetchAPI","city","toLowerCase","URL","concat","console","log","response","status","data","error","code","message","formatResponse","result","current","location","condition","humidity","last_updated","wind_kph","temp_c","temp_f","name","country","tz_id","timezone","weather","temperature","celsius","fahrenheit","weatherCondition","text","windSpeed","cloudCoverage","icon","lastUpdated","context","updateCity"],"sources":["C:/Users/SUBOMMAS/Downloads/WeatherApplication/src/constants.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const cities = [\r\n    \"Itanagar\",\r\n    \"Dispur\",\r\n    \"Patna\",\r\n    \"Raipur\",\r\n    \"Panaji\",\r\n    \"Gandhinagar\",\r\n    \"Chandigarh\",\r\n    \"Shimla\",\r\n    \"Dharamshala\",\r\n    \"Ranchi\",\r\n    \"Bengaluru\",\r\n    \"Thiruvananthapuram\",\r\n    \"Tirupati\",\r\n    \"Amaravati\",\r\n    \"Bhopal\",\r\n    \"Mumbai\",\r\n    \"Imphal\",\r\n    \"Shillong\",\r\n    \"Aizawl\",\r\n    \"Kohima\",\r\n    \"Bhubaneswar\",\r\n    \"Jaipur\",\r\n    \"Gangtok\",\r\n    \"Chennai\",\r\n    \"Hyderabad\",\r\n    \"Agartala\",\r\n    \"Dehradun\",\r\n    \"Gairsain\",\r\n    \"Lucknow\"\r\n  ];\r\n\r\n  export const fetchAPI = async (city) => {\r\n    if (city.toLowerCase() === \"banglore\" || city.toLowerCase() === \"bengluru\") {\r\n        city = \"Bangalore\";\r\n    }\r\n    let URL = `https://api.weatherapi.com/v1/current.json?key=dc27acb7394c462a8a6133905240105&q=${city}`;\r\n    console.log(\"CUSTOM URL::\", URL)\r\n    try {\r\n        const response = await axios(URL);\r\n\r\n        if (response.status === 200) {\r\n            // console.log(\"RESPONSE::\", response);\r\n            \r\n            const data = await response.data;\r\n            //console.log(data);\r\n            return data;\r\n            //const { condition, humidity, last_updated, wind_kph, temp_c, temp_f } = current;\r\n        }\r\n    }\r\n    catch (error) {\r\n        if (error.code === \"ERR_BAD_REQUEST\") {\r\n            return error.message;\r\n        }\r\n\r\n    }\r\n}\r\nexport const formatResponse= async(result)=>{\r\n    if (typeof (result) === \"object\") {\r\n        console.log(\"succes\")\r\n        const { current, location } = await result;\r\n        const { condition, humidity, last_updated, wind_kph, temp_c, temp_f } = current;\r\n        const { name, country, tz_id } = location\r\n        // console.log(tz_id);\r\n        const city = {\r\n            name: name,\r\n            country: country,\r\n            timezone: tz_id,\r\n            weather: {\r\n                temperature: {\r\n                    celsius: temp_c,\r\n                    fahrenheit: temp_f,\r\n                },\r\n                weatherCondition: condition.text,\r\n                windSpeed: wind_kph,\r\n                humidity: humidity,\r\n                cloudCoverage: condition.icon,\r\n                lastUpdated: last_updated\r\n            }\r\n        }\r\n      \r\n    }\r\n    else {\r\n        console.log(\"error\")\r\n        context.updateCity(result);\r\n\r\n    }\r\n\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,MAAM,GAAG,CAClB,UAAU,EACV,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,aAAa,EACb,YAAY,EACZ,QAAQ,EACR,aAAa,EACb,QAAQ,EACR,WAAW,EACX,oBAAoB,EACpB,UAAU,EACV,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,aAAa,EACb,QAAQ,EACR,SAAS,EACT,SAAS,EACT,WAAW,EACX,UAAU,EACV,UAAU,EACV,UAAU,EACV,SAAS,CACV;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAOC,IAAI,IAAK;EACtC,IAAIA,IAAI,CAACC,WAAW,CAAC,CAAC,KAAK,UAAU,IAAID,IAAI,CAACC,WAAW,CAAC,CAAC,KAAK,UAAU,EAAE;IACxED,IAAI,GAAG,WAAW;EACtB;EACA,IAAIE,GAAG,uFAAAC,MAAA,CAAuFH,IAAI,CAAE;EACpGI,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,GAAG,CAAC;EAChC,IAAI;IACA,MAAMI,QAAQ,GAAG,MAAMT,KAAK,CAACK,GAAG,CAAC;IAEjC,IAAII,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACzB;;MAEA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI;MAChC;MACA,OAAOA,IAAI;MACX;IACJ;EACJ,CAAC,CACD,OAAOC,KAAK,EAAE;IACV,IAAIA,KAAK,CAACC,IAAI,KAAK,iBAAiB,EAAE;MAClC,OAAOD,KAAK,CAACE,OAAO;IACxB;EAEJ;AACJ,CAAC;AACD,OAAO,MAAMC,cAAc,GAAE,MAAMC,MAAM,IAAG;EACxC,IAAI,OAAQA,MAAO,KAAK,QAAQ,EAAE;IAC9BT,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,MAAM;MAAES,OAAO;MAAEC;IAAS,CAAC,GAAG,MAAMF,MAAM;IAC1C,MAAM;MAAEG,SAAS;MAAEC,QAAQ;MAAEC,YAAY;MAAEC,QAAQ;MAAEC,MAAM;MAAEC;IAAO,CAAC,GAAGP,OAAO;IAC/E,MAAM;MAAEQ,IAAI;MAAEC,OAAO;MAAEC;IAAM,CAAC,GAAGT,QAAQ;IACzC;IACA,MAAMf,IAAI,GAAG;MACTsB,IAAI,EAAEA,IAAI;MACVC,OAAO,EAAEA,OAAO;MAChBE,QAAQ,EAAED,KAAK;MACfE,OAAO,EAAE;QACLC,WAAW,EAAE;UACTC,OAAO,EAAER,MAAM;UACfS,UAAU,EAAER;QAChB,CAAC;QACDS,gBAAgB,EAAEd,SAAS,CAACe,IAAI;QAChCC,SAAS,EAAEb,QAAQ;QACnBF,QAAQ,EAAEA,QAAQ;QAClBgB,aAAa,EAAEjB,SAAS,CAACkB,IAAI;QAC7BC,WAAW,EAAEjB;MACjB;IACJ,CAAC;EAEL,CAAC,MACI;IACDd,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB+B,OAAO,CAACC,UAAU,CAACxB,MAAM,CAAC;EAE9B;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}