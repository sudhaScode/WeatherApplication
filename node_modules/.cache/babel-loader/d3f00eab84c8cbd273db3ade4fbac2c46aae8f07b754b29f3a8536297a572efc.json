{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUBOMMAS\\\\Downloads\\\\WeatherApplication\\\\src\\\\components\\\\NavBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { cities } from \"../constants\";\nimport styles from \"./NavBar.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet start = [];\nfor (let i = 0; i < 5; i++) {\n  //console.log(\"PUSHED\", cities[i])\n  start.push(cities[i]);\n}\nfunction NavBar() {\n  _s();\n  const [customCities, setCutomCities] = useState([]);\n  const [initialCities, setInitialStates] = useState(start);\n  //console.log(\"CURRENT CITIES:: \",customCities[0]);\n  const size = cities.length;\n\n  //console.log(customCities)\n\n  const nextHandler = () => {\n    console.log(\"CURRENT CITIES:: \", customCities);\n    const firstElement = cities.findIndex(name => name === customCities[0]);\n    const lastElement = cities.findIndex(name => name === customCities[customCities.length - 1]);\n    //console.log(\"INDEX:: \",firstElement, lastElement);\n    let newList = [];\n    for (let i = firstElement + 1; i <= lastElement + 1; i++) {\n      //console.log(\"PUSHED\", cities[i])\n      newList.push(cities[i]);\n    }\n    console.log(\"UPDATED LIST:: \", newList);\n    //setCutomCities([...initialCities]);\n    set;\n  };\n  useEffect(() => {\n    setCutomCities(initialCities);\n  }, [initialCities]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"city-container\"],\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"<<\"\n    }, \"prev\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }, this), customCities && customCities.map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      children: cities[index]\n    }, \"city\".concat(index), false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"spread\",\n      children: \"...\"\n    }, \"spread\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: size\n    }, \"size\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextHandler,\n      children: \">>\"\n    }, \"next\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(NavBar, \"qbRu+WfwnfUE/73Gbvxv6IUqf7s=\");\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","useEffect","cities","styles","jsxDEV","_jsxDEV","start","i","push","NavBar","_s","customCities","setCutomCities","initialCities","setInitialStates","size","length","nextHandler","console","log","firstElement","findIndex","name","lastElement","newList","set","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_","index","concat","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SUBOMMAS/Downloads/WeatherApplication/src/components/NavBar.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {cities} from \"../constants\";\r\nimport styles from \"./NavBar.module.css\"\r\n\r\nlet start =[];\r\nfor(let i= 0;i<5;i++){\r\n    //console.log(\"PUSHED\", cities[i])\r\n   start.push(cities[i]);\r\n }\r\n\r\nfunction NavBar(){\r\n    const [customCities, setCutomCities] = useState([]);\r\n    const [initialCities, setInitialStates] = useState(start);\r\n    //console.log(\"CURRENT CITIES:: \",customCities[0]);\r\n    const size = cities.length;\r\n    \r\n\r\n    //console.log(customCities)\r\n   \r\n   \r\n   const nextHandler =()=>{\r\n    console.log(\"CURRENT CITIES:: \",customCities);\r\n    const firstElement =  cities.findIndex((name)=>name === customCities[0]);\r\n    const lastElement =  cities.findIndex((name)=>name === customCities[customCities.length-1]);\r\n    //console.log(\"INDEX:: \",firstElement, lastElement);\r\n    let newList =[]\r\n    for(let i= firstElement+1;i<=lastElement+1;i++){\r\n        //console.log(\"PUSHED\", cities[i])\r\n       newList.push(cities[i])\r\n     }\r\n     console.log(\"UPDATED LIST:: \",newList);\r\n     //setCutomCities([...initialCities]);\r\n     set\r\n   }\r\n   useEffect(()=>{\r\n    setCutomCities(initialCities);\r\n   },[initialCities])\r\n \r\n\r\n    return (\r\n        <div className={styles[\"city-container\"]}>\r\n         <button key={\"prev\"}>{\"<<\"}</button>\r\n         { customCities && customCities.map((_,index)=>(\r\n    \r\n                <button key={`city${index}`}>{cities[index]}</button>\r\n         ))}\r\n          <button name=\"spread\" key=\"spread\">...</button>\r\n         <button key=\"size\">{size}</button>\r\n         <button onClick={nextHandler} key=\"next\">{\">>\"}</button>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default NavBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}