{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUBOMMAS\\\\Downloads\\\\WeatherApplication\\\\src\\\\components\\\\NavBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { cities, getCurrentCity } from \"../constants\";\nimport styles from \"./NavBar.module.css\";\n//import CustomBar from \"./CutomBar\";\nimport { CityContext } from \"../store/WeatherProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet start = [];\nfor (let i = 0; i < 10; i++) {\n  //console.log(\"PUSHED\", cities[i])\n  start.push(cities[i]);\n}\nfunction NavBar() {\n  _s();\n  const [customCities, setCutomCities] = useState([...start]);\n  const prevRef = useRef(null);\n  const context = useContext(CityContext);\n  const [active, setActive] = useState(0);\n  function getCurrentCity() {\n    navigator.geolocation.getCurrentPosition(position => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      fetch(\"https://api.weatherapi.com/v1/current.json?key=dc27acb7394c462a8a6133905240105&q=\".concat(latitude, \",\").concat(longitude)) // Replace with your OpenWeatherMap API key\n      .then(response => response.json()).then(data => {\n        //console.log(\"Current nearby city:\", data.location.name);\n        context.updateLocation(data.location.name);\n      }).catch(error => console.error(\"Error fetching city:\", error));\n    }, error => {\n      console.error(\"Error getting geolocation:\", error);\n    });\n  }\n  const fetchCityWeather = async () => {\n    getCurrentCity();\n    //console.log(context.currentLocation)\n  };\n\n  //console.log(\"CURRENT CITIES:: \",customCities[0]);\n  let size = cities.length;\n  //const lastElement =  cities.findIndex((name)=>name === customCities[customCities.length-1]);\n  if (customCities.length < 10) {\n    size = customCities.length;\n    console.log(size);\n  }\n  // default selection\n  const activateBar = () => {\n    const city = customCities[active];\n    document.getElementsByName(city);\n  };\n\n  //console.log(customCities)\n  const nextHandler = index => {\n    console.log(\"CURRENT CITIES:: \", index);\n    setActive(prevState => prevState + 1);\n    console.log(\"ACTIVE::\", active);\n    if (active === 10) {\n      setActive(0);\n      const firstElement = cities.findIndex(name => name === customCities[0]);\n      const lastElement = cities.findIndex(name => name === customCities[customCities.length - 1]);\n      //console.log(\"INDEX:: \",firstElement+1, lastElement+2);\n      //let range = Math.floor(Math.random()*2);\n      let newList = cities.slice(firstElement + 1, lastElement + 2);\n      setCutomCities(newList);\n    }\n  };\n  const prevHandler = index => {\n    console.log(\"CURRENT CITIES:: \", index);\n    setActive(index);\n    console.log(\"ACTIVE::\", active);\n    if (active === 0) {\n      setActive(0);\n      const firstElement = cities.findIndex(name => name === customCities[0]);\n      const lastElement = cities.findIndex(name => name === customCities[customCities.length - 1]);\n      //console.log(\"INDEX:: \",firstElement+1, lastElement+2);\n      //let range = Math.floor(Math.random()*2);\n      let newList = cities.slice(firstElement, lastElement + 1);\n      setCutomCities(newList);\n    }\n  };\n  const onClickHandler = event => {\n    console.log(event.target.name);\n  };\n  useEffect(() => {\n\n    //console.log(cityElement);\n    // cityElement.style.backgroundColor =\"green\";\n  }, [active]);\n  useEffect(() => {\n    getCurrentCity();\n    fetchCityWeather();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"city-container\"],\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: prevHandler,\n      ref: prevRef,\n      children: \"<<\"\n    }, \"prev\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), customCities && customCities.map((name, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: index => onClickHandler(index),\n      className: index === active ? styles[\"city-button-active\"] : styles[\"city-button\"],\n      name: name,\n      children: name\n    }, \"city\".concat(index), false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"spread\",\n      children: \"...\"\n    }, \"spread\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: size\n    }, \"size\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextHandler,\n      children: \">>\"\n    }, \"next\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(NavBar, \"LzahbEF1IkgUnu82oWmnPPdJZmc=\");\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","cities","getCurrentCity","styles","CityContext","jsxDEV","_jsxDEV","start","i","push","NavBar","_s","customCities","setCutomCities","prevRef","context","active","setActive","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","fetch","concat","then","response","json","data","updateLocation","location","name","catch","error","console","fetchCityWeather","size","length","log","activateBar","city","document","getElementsByName","nextHandler","index","prevState","firstElement","findIndex","lastElement","newList","slice","prevHandler","onClickHandler","event","target","className","children","onClick","ref","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/SUBOMMAS/Downloads/WeatherApplication/src/components/NavBar.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport { cities, getCurrentCity } from \"../constants\";\r\nimport styles from \"./NavBar.module.css\";\r\n//import CustomBar from \"./CutomBar\";\r\nimport { CityContext } from \"../store/WeatherProvider\";\r\n\r\nlet start = [];\r\nfor (let i = 0; i < 10; i++) {\r\n    //console.log(\"PUSHED\", cities[i])\r\n    start.push(cities[i]);\r\n}\r\n\r\nfunction NavBar() {\r\n    const [customCities, setCutomCities] = useState([...start]);\r\n    const prevRef = useRef(null);\r\n    const context = useContext(CityContext);\r\n    const [active, setActive] = useState(0);\r\n\r\n    function getCurrentCity() {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const latitude = position.coords.latitude;\r\n            const longitude = position.coords.longitude;\r\n            fetch(`https://api.weatherapi.com/v1/current.json?key=dc27acb7394c462a8a6133905240105&q=${latitude},${longitude}`) // Replace with your OpenWeatherMap API key\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    //console.log(\"Current nearby city:\", data.location.name);\r\n                    context.updateLocation(data.location.name);\r\n                })\r\n                .catch(error => console.error(\"Error fetching city:\", error));\r\n        }, (error) => {\r\n            console.error(\"Error getting geolocation:\", error);\r\n        })\r\n    }\r\n\r\n    const fetchCityWeather = async () => {\r\n        getCurrentCity()\r\n        //console.log(context.currentLocation)\r\n    }\r\n\r\n    //console.log(\"CURRENT CITIES:: \",customCities[0]);\r\n    let size = cities.length;\r\n    //const lastElement =  cities.findIndex((name)=>name === customCities[customCities.length-1]);\r\n    if (customCities.length < 10) {\r\n        size = customCities.length;\r\n        console.log(size)\r\n    }\r\n    // default selection\r\n    const activateBar = () => {\r\n        const city = customCities[active];\r\n        document.getElementsByName(city);\r\n\r\n    }\r\n\r\n    //console.log(customCities)\r\n    const nextHandler = (index) => {\r\n        console.log(\"CURRENT CITIES:: \",index);\r\n        setActive((prevState) => prevState + 1);\r\n        console.log(\"ACTIVE::\", active)\r\n        if (active === 10) {\r\n            setActive(0);\r\n            const firstElement = cities.findIndex((name) => name === customCities[0]);\r\n            const lastElement = cities.findIndex((name) => name === customCities[customCities.length - 1]);\r\n            //console.log(\"INDEX:: \",firstElement+1, lastElement+2);\r\n            //let range = Math.floor(Math.random()*2);\r\n            let newList = cities.slice(firstElement + 1, lastElement + 2)\r\n            setCutomCities(newList);\r\n\r\n        }\r\n    }\r\n    const prevHandler = (index) => {\r\n        console.log(\"CURRENT CITIES:: \",index);\r\n        setActive(index);\r\n        console.log(\"ACTIVE::\", active)\r\n        if (active === 0) {\r\n            setActive(0);\r\n            const firstElement = cities.findIndex((name) => name === customCities[0]);\r\n            const lastElement = cities.findIndex((name) => name === customCities[customCities.length - 1]);\r\n            //console.log(\"INDEX:: \",firstElement+1, lastElement+2);\r\n            //let range = Math.floor(Math.random()*2);\r\n            let newList = cities.slice(firstElement, lastElement+1)\r\n            setCutomCities(newList);\r\n        }\r\n    }\r\n    const onClickHandler = (event) => {\r\n        console.log(event.target.name);\r\n    }\r\n    useEffect(()=>{\r\n        \r\n        //console.log(cityElement);\r\n       // cityElement.style.backgroundColor =\"green\";\r\n    },[active]);\r\n\r\n    useEffect(() => {\r\n        getCurrentCity();\r\n        fetchCityWeather();\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles[\"city-container\"]}>\r\n            <button key={\"prev\"}  onClick={prevHandler} ref={prevRef}>{\"<<\"}</button>\r\n            {customCities && customCities.map((name, index) => (\r\n\r\n                <button key={`city${index}`} onClick={(index)=>onClickHandler(index)} className={index === active?styles[\"city-button-active\"]:styles[\"city-button\"]} name={name}>{name}</button>\r\n            ))}\r\n            <button name=\"spread\" key=\"spread\">...</button>\r\n            <button key=\"size\">{size}</button>\r\n            <button onClick={nextHandler} key=\"next\">{\">>\"}</button>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default NavBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}