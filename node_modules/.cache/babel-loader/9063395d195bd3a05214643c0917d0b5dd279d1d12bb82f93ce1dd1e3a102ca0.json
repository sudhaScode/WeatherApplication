{"ast":null,"code":"import axios from \"axios\";\nexport const cities = [\"Itanagar\", \"Dispur\", \"Patna\", \"Raipur\", \"Panaji\", \"Gandhinagar\", \"Chandigarh\", \"Shimla\", \"Dharamshala\", \"Ranchi\", \"Bengaluru\", \"Thiruvananthapuram\", \"Tirupati\", \"Amaravati\", \"Bhopal\", \"Mumbai\", \"Imphal\", \"Shillong\", \"Aizawl\", \"Kohima\", \"Bhubaneswar\", \"Jaipur\", \"Gangtok\", \"Chennai\", \"Hyderabad\", \"Agartala\", \"Dehradun\", \"Gairsain\", \"Lucknow\"];\nexport const fetchAPI = async city => {\n  if (city.toLowerCase() === \"banglore\" || city.toLowerCase() === \"bengluru\") {\n    city = \"Bangalore\";\n  }\n  let URL = \"https://api.weatherapi.com/v1/current.json?key=dc27acb7394c462a8a6133905240105&q=\".concat(city);\n  console.log(\"CUSTOM URL::\", URL);\n  try {\n    const response = await axios(URL);\n    if (response.status === 200) {\n      // console.log(\"RESPONSE::\", response);\n\n      const data = await response.data;\n      //console.log(data);\n      return data;\n      //const { condition, humidity, last_updated, wind_kph, temp_c, temp_f } = current;\n    }\n  } catch (error) {\n    if (error.code === \"ERR_BAD_REQUEST\") {\n      return error.message;\n    }\n  }\n};\nexport const formatResponse = result => {};","map":{"version":3,"names":["axios","cities","fetchAPI","city","toLowerCase","URL","concat","console","log","response","status","data","error","code","message","formatResponse","result"],"sources":["C:/Users/SUBOMMAS/Downloads/WeatherApplication/src/constants.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const cities = [\r\n    \"Itanagar\",\r\n    \"Dispur\",\r\n    \"Patna\",\r\n    \"Raipur\",\r\n    \"Panaji\",\r\n    \"Gandhinagar\",\r\n    \"Chandigarh\",\r\n    \"Shimla\",\r\n    \"Dharamshala\",\r\n    \"Ranchi\",\r\n    \"Bengaluru\",\r\n    \"Thiruvananthapuram\",\r\n    \"Tirupati\",\r\n    \"Amaravati\",\r\n    \"Bhopal\",\r\n    \"Mumbai\",\r\n    \"Imphal\",\r\n    \"Shillong\",\r\n    \"Aizawl\",\r\n    \"Kohima\",\r\n    \"Bhubaneswar\",\r\n    \"Jaipur\",\r\n    \"Gangtok\",\r\n    \"Chennai\",\r\n    \"Hyderabad\",\r\n    \"Agartala\",\r\n    \"Dehradun\",\r\n    \"Gairsain\",\r\n    \"Lucknow\"\r\n  ];\r\n\r\n  export const fetchAPI = async (city) => {\r\n    if (city.toLowerCase() === \"banglore\" || city.toLowerCase() === \"bengluru\") {\r\n        city = \"Bangalore\";\r\n    }\r\n    let URL = `https://api.weatherapi.com/v1/current.json?key=dc27acb7394c462a8a6133905240105&q=${city}`;\r\n    console.log(\"CUSTOM URL::\", URL)\r\n    try {\r\n        const response = await axios(URL);\r\n\r\n        if (response.status === 200) {\r\n            // console.log(\"RESPONSE::\", response);\r\n            \r\n            const data = await response.data;\r\n            //console.log(data);\r\n            return data;\r\n            //const { condition, humidity, last_updated, wind_kph, temp_c, temp_f } = current;\r\n        }\r\n    }\r\n    catch (error) {\r\n        if (error.code === \"ERR_BAD_REQUEST\") {\r\n            return error.message;\r\n        }\r\n\r\n    }\r\n}\r\nexport const formatResponse=(result)=>{\r\n\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,MAAM,GAAG,CAClB,UAAU,EACV,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,aAAa,EACb,YAAY,EACZ,QAAQ,EACR,aAAa,EACb,QAAQ,EACR,WAAW,EACX,oBAAoB,EACpB,UAAU,EACV,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,aAAa,EACb,QAAQ,EACR,SAAS,EACT,SAAS,EACT,WAAW,EACX,UAAU,EACV,UAAU,EACV,UAAU,EACV,SAAS,CACV;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAOC,IAAI,IAAK;EACtC,IAAIA,IAAI,CAACC,WAAW,CAAC,CAAC,KAAK,UAAU,IAAID,IAAI,CAACC,WAAW,CAAC,CAAC,KAAK,UAAU,EAAE;IACxED,IAAI,GAAG,WAAW;EACtB;EACA,IAAIE,GAAG,uFAAAC,MAAA,CAAuFH,IAAI,CAAE;EACpGI,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,GAAG,CAAC;EAChC,IAAI;IACA,MAAMI,QAAQ,GAAG,MAAMT,KAAK,CAACK,GAAG,CAAC;IAEjC,IAAII,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACzB;;MAEA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI;MAChC;MACA,OAAOA,IAAI;MACX;IACJ;EACJ,CAAC,CACD,OAAOC,KAAK,EAAE;IACV,IAAIA,KAAK,CAACC,IAAI,KAAK,iBAAiB,EAAE;MAClC,OAAOD,KAAK,CAACE,OAAO;IACxB;EAEJ;AACJ,CAAC;AACD,OAAO,MAAMC,cAAc,GAAEC,MAAM,IAAG,CAEtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}